/*
 * Copyright (C) 2007, The EROS Group, LLC
 *
 * This file is part of the Coyotos Operating System.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2,
 * or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

/*
 * Utility functions
 */
module coyotos.Util {
  import cons = coyotos.Constructor;

  export def min(a, b) {
    if (a <= b) {
      return a;
    }
    return b;
  }

  export def max(a, b) {
    if (a >= b) {
      return a;
    }
    return b;
  }

  export def make_gpt(bank, l2v, l2g) {
    def	gpt = guard(new GPT(bank), 0, l2g);
    gpt.l2v = l2v;

    return gpt;
  }

  /* Make a running process from an image.
   *
   * *bank* should be a fresh bank.  *image* should be the result of a
   * coyotos.model.* "load_image()" call. *handler* should be NullCap() or
   * a constructor for the desired Process handler.
   *
   * The process will have a copy of the default Tools node;  if other 
   * tools are needed, use:
   *
   *   import rt = coyotos.RunTime;
   *   import util = coyotos.Util;
   *   ...
   *   def proc = util.make_process(...);
   *   ...
   *   proc.capReg[rt.REG.TOOLS][slot] = value;
   *
   * to add them to the tools array.
   */
  export def make_process(bank, image, handler) {
    return cons.make_process(bank, image, handler);
  }
}
