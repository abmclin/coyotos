/*
 * Copyright (C) 2007, The EROS Group, LLC
 *
 * This file is part of the Coyotos Operating System.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2,
 * or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

module testHandler {
   import TargetInfo = coyotos.TargetInfo;
   import rt = coyotos.RunTime;
   import util = coyotos.Util;
   import sb = coyotos.SpaceBank;

   def make_ironman_process(bank, file) {
      def image = util.load_small_image(bank, file);
      image.space = insert_subspace(PrimeBank,
				    image.space,
				    noexec(new Page(bank)),
				    TargetInfo.small_stack_page_addr);
      return sb.make_running_process(bank, image);
   }

   def handler = make_ironman_process(PrimeBank, "testHandler");

   export capreg APP {
      KERNLOG = rt.REG.APP0 + 4
   };

   export enum {
      PP_ProcessHandler = 0,
      PP_MemoryHandler = 1
   };

   handler.capReg[APP.KERNLOG] = KernLog();

   def child1 = make_ironman_process(PrimeBank, "testProg");
   child1.handler = enter(handler.capReg[rt.REG.INITEPT],
	PP_ProcessHandler);

   def child2 = make_ironman_process(PrimeBank, "testProg");
   child2.addrSpace.cap[15] = enter(handler.capReg[rt.REG.INITEPT], 
	PP_MemoryHandler);
   child2.addrSpace.ha = 1;
}
