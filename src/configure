#!/bin/bash
#
# Copyright (C) 2007, The EROS Group, LLC.
#
# This file is part of the Coyotos Operating System.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2,
# or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#

# This is a quasi-configure script for the Coyotos tree. It creates a
# makefile script in build/make/config.mk. The goal is to ensure that
# all builds generate the same result even if you forget to type
# various variables.
#
# The command line usage should be similar enough to autoconf
# configure to seem familiar, but this script was not generated by
# autoconf/automake.

if [ "${COYOTOS_SRC}" = "" ]
then
  COYOTOS_SRC=`echo $PWD| grep '/coyotos/src' |sed 's@/coyotos/src.*$@/coyotos/src@'`
fi

if [ "${COYOTOS_SRC}" = "" ]
then
  echo Cannot find COYOTOS_SRC
  exit 1
fi

if [ -r ${COYOTOS_SRC}/build/make/config.mk ]
then
    . ${COYOTOS_SRC}/build/make/config.mk
fi

INITIAL_COYOTOS_TARGET=${COYOTOS_TARGET}

usage () {
      echo "Usage: configure --target=cpu-vendor[-os]-bsp [other-options]"
      echo "   where other options include:"
      echo "     --xenv=path/to/xenv  [default: /coyotos]:"
      echo "     --enable=component"
      echo "     --disable=component"
      echo
      echo "   and packages are:"
      echo "     docs       [default: not built]"
      echo "     tests      [default: not built]"
      echo
      echo "  e.g.: ./configure --target=i386-unknown-coyotos"
      echo
      echo "  Once run, the script can be re-run with selected options to change"
      echo "  your choices."
      exit 1
}

target_well_formed() {
    set -- `echo $1 | sed 's/-/ /g'`
    if [ \( $# -eq 3 \) -o \( $# -eq 4 \) ]
    then
	true
    else
	false
    fi
}

target_cpu() {
    set -- `echo $1 | sed 's/-/ /g'`
    echo $1
}

target_vendor() {
    set -- `echo $1 | sed 's/-/ /g'`

    local TARGET_VENDOR=$2

    # Some pseudo-vendors that are known by convention:
    case ${TARGET_VENDOR} in
	pc)
	    TARGET_VENDOR=unknown;;
	*)
	    ;;
    esac
	    
    echo ${TARGET_VENDOR}
}

target_os() {
    set -- `echo $1 | sed 's/-/ /g'`

    local TARGET_OS=$3

    # If we were handed i386-pc, assume OS is coyotos
    # if we were handed i386-pc-
    if [ $# -eq 3 ]
    then
	TARGET_OS=coyotos
    fi

    echo ${TARGET_OS}
}

target_bsp() {
    set -- `echo $1 | sed 's/-/ /g'`

    local TARGET_BSP=$4

    if [ $# -eq 3 ]
    then
	TARGET_BSP=$3
    fi

    if [ "${TARGET_BSP}"="coyotos" ]
    then
	TARGET_BSP=unknown
    fi

    echo ${TARGET_BSP}
}

gcc_arch() {
    case $1 in
	coldfire)
	    echo "m68k";;
	*)
	    echo $1;;
    esac
}

gcc_model() {
    case $1 in
	coldfire)
	    echo "-m5407";;
	*)
	    echo ;;
    esac
}

OPTION_TARGET_GIVEN=0
option_target() {
    if [ ${OPTION_TARGET_GIVEN} -eq 1 ]
    then
        echo "Target given multiple times"
        usage
    fi
    OPTION_TARGET_GIVEN=1

    if ! target_well_formed $1
    then
	usage
    fi
    COYOTOS_TARGET=$1
    COYOTOS_ARCH=`target_cpu ${COYOTOS_TARGET}`
    COYOTOS_GCC_ARCH=`gcc_arch ${COYOTOS_ARCH}`
    COYOTOS_GCC_MODEL=`gcc_model ${COYOTOS_ARCH}`
    COYOTOS_VENDOR=`target_vendor ${COYOTOS_TARGET}`
    COYOTOS_BSP=`target_bsp ${COYOTOS_TARGET}`
}


build_package() {
    case $1 in
	docs)
	    COYOTOS_ENABLE_DOCS=$2;;
	tests)
	    COYOTOS_ENABLE_TESTS=$2;;
	*)
	    usage;;
    esac
}

if [ \( $# -eq 0 \) -a \( "${COYOTOS_TARGET}" = "" \) ]
then
    usage
fi

while [ $# -gt 0 ]
do
    case $1 in
	--target)
	    option_target $2;
	    shift; shift;;

	--target=*)
   	    option_target `echo $1|sed 's/^--target=//'`
            shift;;
	
	--xenv)
	    COYOTOS_XENV=$2;
	    shift; shift;;

	--xenv=*)
	    COYOTOS_XENV=`echo $1|sed 's/^--xenv=//'`
	    shift;;

	--enable)
	    build_package $2 yes;
	    shift; shift;;

	--enable=*)
	    build_package `echo $1|sed 's/^--enable=//'` yes
	    shift;;

	--disable)
	    build_package $2; no
	    shift; shift;;

	--disable=*)
	    build_package `echo $1|sed 's/^--disable=//'` no
	    shift;;

	--help)
	    usage;;

	-*)
	    usage;;

	*)
            if [ $# -ne 1 ]
            then
                usage
            fi
            option_target $1;
            shift;;
    esac
done

#echo CPU `target_cpu ${TARGET}`
#echo VENDOR `target_vendor ${TARGET}`
#echo OS `target_os ${TARGET}`
#echo BSP `target_bsp ${TARGET}`

(
echo "###############################################################"
echo "#                                                             #"
echo "# This file was machine-generated by coyotos/src/configure.   #"
echo "# Do not edit it unless you know what these variables do!     #"
echo "#                                                             #"
echo "###############################################################"
echo
echo COYOTOS_TARGET=${COYOTOS_TARGET}
echo COYOTOS_ARCH=${COYOTOS_ARCH}
echo COYOTOS_GCC_ARCH=${COYOTOS_GCC_ARCH}
echo COYOTOS_GCC_MODEL=${COYOTOS_GCC_MODEL}
echo COYOTOS_VENDOR=${COYOTOS_VENDOR}
echo COYOTOS_BSP=${COYOTOS_BSP}
echo COYOTOS_XENV=${COYOTOS_XENV:-/coyotos}
echo COYOTOS_ENABLE_DOCS=${COYOTOS_ENABLE_DOCS:-no}
echo COYOTOS_ENABLE_TESTS=${COYOTOS_ENABLE_TESTS:-no}

)  > ${COYOTOS_SRC}/build/make/config.mk

echo "Configuration is now:"
echo
grep COYOTOS_ ${COYOTOS_SRC}/build/make/config.mk | sed 's/^/  /'
echo

if [ "${INITIAL_COYOTOS_TARGET}" != "${COYOTOS_TARGET}" ]
then
    echo
    echo "Target selection has changed. Cleaning your tree to prevent mishap:"
    (set -x; make -C ${COYOTOS_SRC} distclean > /dev/null 2>&1)
fi

exit 0

############################
# Local Variables:
# mode:shell-script
# End:
############################
