package coyotos;

/// @brief Kernel interface for per-process fault handlers.
///
/// A fault handler should implement this interface on its entry point
/// capability. When delivering a fault to an external handler, the
/// kernel will upcall the fault according to the protocol of this
/// interface.

interface ProcessHandler extends Cap {
  /// @brief Kernel-invoked entry point for process fault handler.
  ///
  /// This entry point is invoked by the kernel. The capability @p
  /// proc names the process that incurred the fault. The @p fault
  /// structure provides the fault code and the issued address at
  /// which the fault occurred.
  ///
  ///  Whether the fault will be resolved is at the discretion of the
  /// invoked handler. If the handler chooses to resolve the fault, it
  /// should take any action necessary to prevent recurrence and then
  /// call the Process.resume method with the @c clearFault parameter
  /// set to true.
  ///
  /// Note that in contrast to MemoryHandler.handle, the process
  /// capability provided here is a full-strength capability.
  ///
  /// Note that this is a oneway method; no reply is expected.  The
  /// capability supplied in the reply slot at the time of upcall will
  /// be the Null capability. Merely replying in the conventional way is
  /// @em not sufficient to restart the faulted process.
  oneway void handle(Process proc, Process.FC faultCode, 
		     unsigned long long faultInfo);
};
